#!/usr/bin/env python
# (C) Copyright 1996-2018 ECMWF.
#
# This software is licensed under the terms of the Apache Licence Version 2.0
# which can be obtained at http://www.apache.org/licenses/LICENSE-2.0.
# In applying this licence, ECMWF does not waive the privileges and immunities
# granted to it by virtue of its status as an intergovernmental organisation nor
# does it submit to any jurisdiction.

"""

Utility to generate an "approximated" kresults file from a kprofile
(this can be used by kronos to build an "approximated" kresults file from
generic applications)

"""

import argparse
import sys

from kronos.kronos_executor.io import ProfileFormat

from kronos_modeller.format_data_handlers.converter_kprofile_kresults import \
    ConverterKprofileKresults

if __name__ == "__main__":

    # Parser for the required arguments
    parser = argparse.ArgumentParser(description=__doc__, formatter_class=argparse.RawTextHelpFormatter)
    parser.add_argument("kprofile_file", type=str, help="Name of the KProfile file to read in")
    parser.add_argument("--output", type=str, help="Name of the Kresults file to write out")
    parser.add_argument("--user_runtime", type=float, help="Name of the Kresults file to write out")

    # print the help if no arguments are passed
    if len(sys.argv) == 1:
        parser.print_help()
        sys.exit(1)

    # parse the arguments..
    args = parser.parse_args()

    kprofile_data = ProfileFormat.from_filename(args.kprofile_file)
    converter = ConverterKprofileKresults(kprofile_data, user_runtime=args.user_runtime)
    kresults = converter.convert(nbins=20)

    out_file = args.output if args.output else "statistics.kresults"
    kresults[0].write_filename(out_file)


