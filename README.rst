======
README
======

1. Description
--------------
Kronos is a HPC workload simulator that generates a model workload starting from workload data collected on a real HPC
system. The generated model can be translated into a set of applications+schedule usable to benchmark HPC prototypes.

**Documentation can be found here:** https://software.ecmwf.int/wiki/display/NEX/kronos-core+documentation

2. Licence
----------
Please read LICENCE file

2. Usage
--------
Kronos reads profiled workload data (Kronos Profile Format .KPF) and generates a workload model (Kronos Schedule Format
KSF). The main steps to run Kronos are listed here below.

*kronos_model.py*:
  Executes Kronos model

*kronos-executor*:
  Executes a KSF file on a HPC system

Additional utility scripts are also provided (examples below):

*kronos_ingest.py*:
  Ingests workload profile data and stores them into pickle files

*kronos_raw_to_kpf.py*:
  Converts pickled data into KPF format (Kronos input format)

*kronos-map-to-kpf*:
  Utility tool for collecting MAP files of an executor run and convert it to KPF format

*kronos-plot-run*:
  Utility tool for plotting the results of a run (reads a KPF file of the run)

3. File formats
---------------
Kronos files formats are listed below:

- Kronos configuration format (for info: > *kronos-conf*)
- Kronos Profile Format (for info: > *kronos-kpf*)
- Kronos Schedule Format (for info: > *kronos-ksf*)

4. Executor
-----------
The schedule file (KSF format) generated by Kronos is passed on to Kronos-executor that translates the
schedule into real applications to be run an a HPC system.
