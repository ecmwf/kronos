======
README
======

1. Description
--------------
Kronos is a HPC workload simulator that generates a model workload starting from workload data collected on a real HPC
system. The generated model can be translated into a set of applications+schedule usable to benchmark HPC prototypes.

**Documentation can be found here:** https://software.ecmwf.int/wiki/display/NEX/kronos-core+documentation

2. Licence
----------
Please read LICENCE file

2. Usage
--------
Kronos Modeller reads profiled workload data (.KPF format) and generates a synthetic schedule (KSF format).
Kronos Executor reads a synthetic schedule (KSF format) and executes it on a HPC system

3. Kronos File formats
----------------------
Kronos files formats are listed below:

- Kronos configuration format (for info: > *kronos-conf*)
- Kronos Profile Format (for info: > *kronos-kpf*)
- Kronos Schedule Format (for info: > *kronos-ksf*)
- Kronos Result Format (for info: > *kronos-krf*)

4. Executor
-----------
The schedule file (KSF format) generated by Kronos is passed on to Kronos-executor that translates the
schedule into real applications to be run an a HPC system.

Instructions on how to run the executor are in INSTALL.rst

Run the executor
~~~~~~~~~~~~~~~~

- load the executor conda environment

  > source activate executor

- Setup the executor configuration file

- Setup the submit job template (<src-dir>/kronos/executor/job_classes)

- run the executor

  > kronos-executor <executor-config-file> <path-to-ksf-file>

Check results:
~~~~~~~~~~~~~~

- Performance parameters of the run can be retrieved as follows

  > kronos-run-perf <path-to-output-dir>

Collect results:
~~~~~~~~~~~~~~~~

- All the relevant output files can be collected in a tarball

  > kronos-run-collect <path-to-output-dir>
