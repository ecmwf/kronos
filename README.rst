======
README
======

1. Description
--------------
Kronos is a HPC workload simulator that generates a model workload starting from workload data collected on a real HPC
system and then translates the worklaod model into a set of applications+schedule usable to benchmark HPC prototypes.
The software is mainly split into two components:
  - Kronos Modellder: ingests HPC workload data and generate a workload model and schedule
  - Kronos Executor: reads the workload model and deploys it on a real HPC system (through a set of "synthetic applications")

2. Licence
----------
Please read LICENCE file

2. Usage
--------
Kronos Modeller reads profiled workload data (.KPF format) and generates a synthetic schedule (KSF format).
Kronos Executor reads a synthetic schedule (KSF format) and executes it on a HPC system

3. Kronos File formats
----------------------
Kronos files formats are listed below. For each format an executable ("kronos-<format>) in the /bin directory will provide description of the field

- Kronos Executor configuration format (for info: > kronos-config-exe)
- Kronos Profile Format (for info: > kronos-kpf)
- Kronos Schedule Format (for info: > kronos-ksf)
- Kronos Results Format (for info: > kronos-krf)

4. Executor
-----------
The schedule file (KSF format) generated by the Kronos Modeller is passed on to Kronos Executor that translates the schedule into real applications to be
run an a HPC system. Installation instructions of the executor are in INSTALL.rst.

Run the executor
~~~~~~~~~~~~~~~~

- load the executor conda environment
  > source activate executor

- Setup the executor configuration file
  - A detailad description of the fields is shown by executing 
    > kronos-config-exe

- Setup the submit job template 
  - Examples of job submit templates can be found in (e.g. slurm.py and pbs.py):
    - <src-dir>/kronos/executor/job_classes

- run the executor
  > kronos-executor <executor-config-file> <path-to-ksf-file>

Check results:
~~~~~~~~~~~~~~

- Performance parameters of the run can be retrieved as follows

  > kronos-run-perf <path-to-output-dir>

Collect results:
~~~~~~~~~~~~~~~~

- All the relevant output files can be collected in a tarball by executing:

  > kronos-run-collect <path-to-output-dir>

  The tarball will be placed into <path-to-output-dir>
